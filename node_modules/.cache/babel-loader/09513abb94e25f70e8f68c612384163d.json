{"ast":null,"code":"import _slicedToArray from \"/Users/gsg/Documents/3d/react-demo/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gsg/Documents/3d/react-demo/demo/src/3d/Rings.js\";\nimport * as THREE from 'three';\nimport React from 'react';\nimport useStore from '../store';\nvar geometry = new THREE.RingBufferGeometry(1, 1.01, 64);\nvar material = new THREE.MeshBasicMaterial({\n  color: new THREE.Color('lightgreen'),\n  side: THREE.DoubleSide\n});\nexport default function Rings() {\n  var _this = this;\n\n  var _useStore = useStore(function (state) {\n    return state.mutation;\n  }),\n      rings = _useStore.rings;\n\n  return rings.map(function (_ref, i) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        pos = _ref2[0],\n        matrix = _ref2[1];\n\n    var f = Math.sin(i / 10) * Math.PI / 2;\n    return /*#__PURE__*/React.createElement(\"mesh\", {\n      key: i,\n      position: pos,\n      scale: [30 + i * 5 * f, 30 + i * 5 * f, 30 + i * 5 * f],\n      onUpdate: function onUpdate(self) {\n        return self.quaternion.setFromRotationMatrix(matrix);\n      },\n      geometry: geometry,\n      material: material,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/gsg/Documents/3d/react-demo/demo/src/3d/Rings.js"],"names":["THREE","React","useStore","geometry","RingBufferGeometry","material","MeshBasicMaterial","color","Color","side","DoubleSide","Rings","state","mutation","rings","map","i","pos","matrix","f","Math","sin","PI","self","quaternion","setFromRotationMatrix"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,QAAQ,GAAG,IAAIH,KAAK,CAACI,kBAAV,CAA6B,CAA7B,EAAgC,IAAhC,EAAsC,EAAtC,CAAjB;AACA,IAAMC,QAAQ,GAAG,IAAIL,KAAK,CAACM,iBAAV,CAA4B;AAAEC,EAAAA,KAAK,EAAE,IAAIP,KAAK,CAACQ,KAAV,CAAgB,YAAhB,CAAT;AAAwCC,EAAAA,IAAI,EAAET,KAAK,CAACU;AAApD,CAA5B,CAAjB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACVT,QAAQ,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAV;AAAA,GAAN,CADE;AAAA,MACpBC,KADoB,aACpBA,KADoB;;AAE5B,SAAOA,KAAK,CAACC,GAAN,CAAU,gBAAgBC,CAAhB,EAAsB;AAAA;AAAA,QAApBC,GAAoB;AAAA,QAAfC,MAAe;;AACnC,QAAMC,CAAC,GAAIC,IAAI,CAACC,GAAL,CAASL,CAAC,GAAG,EAAb,IAAmBI,IAAI,CAACE,EAAzB,GAA+B,CAAzC;AACA,wBACI;AACI,MAAA,GAAG,EAAEN,CADT;AAEI,MAAA,QAAQ,EAAEC,GAFd;AAGI,MAAA,KAAK,EAAE,CAAC,KAAKD,CAAC,GAAG,CAAJ,GAAQG,CAAd,EAAiB,KAAKH,CAAC,GAAG,CAAJ,GAAQG,CAA9B,EAAiC,KAAKH,CAAC,GAAG,CAAJ,GAAQG,CAA9C,CAHX;AAII,MAAA,QAAQ,EAAE,kBAAAI,IAAI;AAAA,eAAIA,IAAI,CAACC,UAAL,CAAgBC,qBAAhB,CAAsCP,MAAtC,CAAJ;AAAA,OAJlB;AAKI,MAAA,QAAQ,EAAEf,QALd;AAMI,MAAA,QAAQ,EAAEE,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH,GAZM,CAAP;AAaH","sourcesContent":["import * as THREE from 'three'\nimport React from 'react'\nimport useStore from '../store'\n\nconst geometry = new THREE.RingBufferGeometry(1, 1.01, 64)\nconst material = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightgreen'), side: THREE.DoubleSide })\n\nexport default function Rings() {\n    const { rings } = useStore(state => state.mutation)\n    return rings.map(([pos, matrix], i) => {\n        const f = (Math.sin(i / 10) * Math.PI) / 2\n        return (\n            <mesh\n                key={i}\n                position={pos}\n                scale={[30 + i * 5 * f, 30 + i * 5 * f, 30 + i * 5 * f]}\n                onUpdate={self => self.quaternion.setFromRotationMatrix(matrix)}\n                geometry={geometry}\n                material={material}\n            />\n        )\n    })\n}\n"]},"metadata":{},"sourceType":"module"}
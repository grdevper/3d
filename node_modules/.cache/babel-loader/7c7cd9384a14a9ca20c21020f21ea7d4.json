{"ast":null,"code":"var _jsxFileName = \"/Users/gsg/Documents/3d/react-demo/demo/src/3d/Ship.js\";\nimport * as THREE from 'three';\nimport React, { useRef } from 'react';\nimport { useLoader, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport useStore from '../store';\nvar geometry = new THREE.BoxBufferGeometry(1, 1, 40);\nvar lightgreen = new THREE.Color('lightgreen');\nvar hotpink = new THREE.Color('hotpink');\nvar laserMaterial = new THREE.MeshBasicMaterial({\n  color: lightgreen\n});\nvar crossMaterial = new THREE.MeshBasicMaterial({\n  color: hotpink,\n  fog: false\n});\nvar position = new THREE.Vector3();\nvar direction = new THREE.Vector3();\nexport default function Ship() {\n  var _this = this;\n\n  var gltf = useLoader(GLTFLoader, '/ship.gltf');\n  var mutation = useStore(function (state) {\n    return state.mutation;\n  });\n  var clock = mutation.clock,\n      mouse = mutation.mouse,\n      ray = mutation.ray;\n  var lasers = useStore(function (state) {\n    return state.lasers;\n  });\n  var main = useRef();\n  var laserGroup = useRef();\n  var laserLight = useRef();\n  var exhaust = useRef();\n  var cross = useRef();\n  var target = useRef();\n  useFrame(function () {\n    main.current.position.z = Math.sin(clock.getElapsedTime() * 40) * Math.PI * 0.1;\n    main.current.rotation.z += (mouse.x / 500 - main.current.rotation.z) * 0.1;\n    main.current.rotation.x += (-mouse.y / 1200 - main.current.rotation.x) * 0.1;\n    main.current.rotation.y += (-mouse.x / 1200 - main.current.rotation.y) * 0.1;\n    main.current.position.x += (mouse.x / 10 - main.current.position.x) * 0.1;\n    main.current.position.y += (25 + -mouse.y / 10 - main.current.position.y) * 0.1;\n    exhaust.current.scale.x = 1 + Math.sin(clock.getElapsedTime() * 200);\n    exhaust.current.scale.y = 1 + Math.sin(clock.getElapsedTime() * 200);\n\n    for (var i = 0; i < lasers.length; i++) {\n      var group = laserGroup.current.children[i];\n      group.position.z -= 20;\n    }\n\n    laserLight.current.intensity += ((lasers.length && Date.now() - lasers[lasers.length - 1] < 100 ? 20 : 0) - laserLight.current.intensity) * 0.3; // Get ships orientation and save it to the stores ray\n\n    main.current.getWorldPosition(position);\n    main.current.getWorldDirection(direction);\n    ray.origin.copy(position);\n    ray.direction.copy(direction.negate()); // ...\n\n    crossMaterial.color = mutation.hits ? lightgreen : hotpink;\n    cross.current.visible = !mutation.hits;\n    target.current.visible = !!mutation.hits;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    scale: [3.5, 3.5, 3.5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: cross,\n    position: [0, 0, -300],\n    name: \"cross\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: 1000,\n    material: crossMaterial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [20, 2, 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: 1000,\n    material: crossMaterial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [2, 20, 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"group\", {\n    ref: target,\n    position: [0, 0, -300],\n    name: \"target\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0, 20, 0],\n    renderOrder: 1000,\n    material: crossMaterial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [40, 2, 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0, -20, 0],\n    renderOrder: 1000,\n    material: crossMaterial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [40, 2, 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [20, 0, 0],\n    renderOrder: 1000,\n    material: crossMaterial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [2, 40, 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [-20, 0, 0],\n    renderOrder: 1000,\n    material: crossMaterial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [2, 40, 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"pointLight\", {\n    ref: laserLight,\n    position: [0, 0, -20],\n    distance: 100,\n    intensity: 0,\n    color: \"lightgreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: laserGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, lasers.map(function (t, i) {\n    return /*#__PURE__*/React.createElement(\"group\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"mesh\", {\n      position: [-2.8, 0, -0.8],\n      geometry: geometry,\n      material: laserMaterial,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"mesh\", {\n      position: [2.8, 0, -0.8],\n      geometry: geometry,\n      material: laserMaterial,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    rotation: [Math.PI / 2, Math.PI, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    name: \"Renault_(S,_T1)_0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", Object.assign({\n    attach: \"geometry\"\n  }, gltf.__$[5].geometry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: \"#070707\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    name: \"Renault_(S,_T1)_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", Object.assign({\n    attach: \"geometry\"\n  }, gltf.__$[6].geometry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    name: \"Renault_(S,_T1)_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", Object.assign({\n    attach: \"geometry\"\n  }, gltf.__$[7].geometry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: \"#070707\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    name: \"Renault_(S,_T1)_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", Object.assign({\n    attach: \"geometry\"\n  }, gltf.__$[8].geometry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"lightblue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    name: \"Renault_(S,_T1)_4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", Object.assign({\n    attach: \"geometry\"\n  }, gltf.__$[9].geometry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    name: \"Renault_(S,_T1)_5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", Object.assign({\n    attach: \"geometry\"\n  }, gltf.__$[10].geometry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: exhaust,\n    scale: [1, 1, 30],\n    position: [0, 1, 30],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"dodecahedronBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1.5, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"lightblue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/gsg/Documents/3d/react-demo/demo/src/3d/Ship.js"],"names":["THREE","React","useRef","useLoader","useFrame","GLTFLoader","useStore","geometry","BoxBufferGeometry","lightgreen","Color","hotpink","laserMaterial","MeshBasicMaterial","color","crossMaterial","fog","position","Vector3","direction","Ship","gltf","mutation","state","clock","mouse","ray","lasers","main","laserGroup","laserLight","exhaust","cross","target","current","z","Math","sin","getElapsedTime","PI","rotation","x","y","scale","i","length","group","children","intensity","Date","now","getWorldPosition","getWorldDirection","origin","copy","negate","hits","visible","map","t","__$"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,QAAQ,GAAG,IAAIP,KAAK,CAACQ,iBAAV,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,EAAlC,CAAjB;AACA,IAAMC,UAAU,GAAG,IAAIT,KAAK,CAACU,KAAV,CAAgB,YAAhB,CAAnB;AACA,IAAMC,OAAO,GAAG,IAAIX,KAAK,CAACU,KAAV,CAAgB,SAAhB,CAAhB;AACA,IAAME,aAAa,GAAG,IAAIZ,KAAK,CAACa,iBAAV,CAA4B;AAAEC,EAAAA,KAAK,EAAEL;AAAT,CAA5B,CAAtB;AACA,IAAMM,aAAa,GAAG,IAAIf,KAAK,CAACa,iBAAV,CAA4B;AAAEC,EAAAA,KAAK,EAAEH,OAAT;AAAkBK,EAAAA,GAAG,EAAE;AAAvB,CAA5B,CAAtB;AACA,IAAMC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,OAAV,EAAjB;AACA,IAAMC,SAAS,GAAG,IAAInB,KAAK,CAACkB,OAAV,EAAlB;AAEA,eAAe,SAASE,IAAT,GAAgB;AAAA;;AAC3B,MAAMC,IAAI,GAAGlB,SAAS,CAACE,UAAD,EAAa,YAAb,CAAtB;AACA,MAAMiB,QAAQ,GAAGhB,QAAQ,CAAC,UAAAiB,KAAK;AAAA,WAAIA,KAAK,CAACD,QAAV;AAAA,GAAN,CAAzB;AAF2B,MAGnBE,KAHmB,GAGGF,QAHH,CAGnBE,KAHmB;AAAA,MAGZC,KAHY,GAGGH,QAHH,CAGZG,KAHY;AAAA,MAGLC,GAHK,GAGGJ,QAHH,CAGLI,GAHK;AAI3B,MAAMC,MAAM,GAAGrB,QAAQ,CAAC,UAAAiB,KAAK;AAAA,WAAIA,KAAK,CAACI,MAAV;AAAA,GAAN,CAAvB;AACA,MAAMC,IAAI,GAAG1B,MAAM,EAAnB;AACA,MAAM2B,UAAU,GAAG3B,MAAM,EAAzB;AACA,MAAM4B,UAAU,GAAG5B,MAAM,EAAzB;AACA,MAAM6B,OAAO,GAAG7B,MAAM,EAAtB;AACA,MAAM8B,KAAK,GAAG9B,MAAM,EAApB;AACA,MAAM+B,MAAM,GAAG/B,MAAM,EAArB;AAEAE,EAAAA,QAAQ,CAAC,YAAM;AACXwB,IAAAA,IAAI,CAACM,OAAL,CAAajB,QAAb,CAAsBkB,CAAtB,GAA0BC,IAAI,CAACC,GAAL,CAASb,KAAK,CAACc,cAAN,KAAyB,EAAlC,IAAwCF,IAAI,CAACG,EAA7C,GAAkD,GAA5E;AACAX,IAAAA,IAAI,CAACM,OAAL,CAAaM,QAAb,CAAsBL,CAAtB,IAA2B,CAACV,KAAK,CAACgB,CAAN,GAAU,GAAV,GAAgBb,IAAI,CAACM,OAAL,CAAaM,QAAb,CAAsBL,CAAvC,IAA4C,GAAvE;AACAP,IAAAA,IAAI,CAACM,OAAL,CAAaM,QAAb,CAAsBC,CAAtB,IAA2B,CAAC,CAAChB,KAAK,CAACiB,CAAP,GAAW,IAAX,GAAkBd,IAAI,CAACM,OAAL,CAAaM,QAAb,CAAsBC,CAAzC,IAA8C,GAAzE;AACAb,IAAAA,IAAI,CAACM,OAAL,CAAaM,QAAb,CAAsBE,CAAtB,IAA2B,CAAC,CAACjB,KAAK,CAACgB,CAAP,GAAW,IAAX,GAAkBb,IAAI,CAACM,OAAL,CAAaM,QAAb,CAAsBE,CAAzC,IAA8C,GAAzE;AACAd,IAAAA,IAAI,CAACM,OAAL,CAAajB,QAAb,CAAsBwB,CAAtB,IAA2B,CAAChB,KAAK,CAACgB,CAAN,GAAU,EAAV,GAAeb,IAAI,CAACM,OAAL,CAAajB,QAAb,CAAsBwB,CAAtC,IAA2C,GAAtE;AACAb,IAAAA,IAAI,CAACM,OAAL,CAAajB,QAAb,CAAsByB,CAAtB,IAA2B,CAAC,KAAK,CAACjB,KAAK,CAACiB,CAAP,GAAW,EAAhB,GAAqBd,IAAI,CAACM,OAAL,CAAajB,QAAb,CAAsByB,CAA5C,IAAiD,GAA5E;AACAX,IAAAA,OAAO,CAACG,OAAR,CAAgBS,KAAhB,CAAsBF,CAAtB,GAA0B,IAAIL,IAAI,CAACC,GAAL,CAASb,KAAK,CAACc,cAAN,KAAyB,GAAlC,CAA9B;AACAP,IAAAA,OAAO,CAACG,OAAR,CAAgBS,KAAhB,CAAsBD,CAAtB,GAA0B,IAAIN,IAAI,CAACC,GAAL,CAASb,KAAK,CAACc,cAAN,KAAyB,GAAlC,CAA9B;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,MAAM,CAACkB,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,UAAME,KAAK,GAAGjB,UAAU,CAACK,OAAX,CAAmBa,QAAnB,CAA4BH,CAA5B,CAAd;AACAE,MAAAA,KAAK,CAAC7B,QAAN,CAAekB,CAAf,IAAoB,EAApB;AACH;;AACDL,IAAAA,UAAU,CAACI,OAAX,CAAmBc,SAAnB,IAAgC,CAAC,CAACrB,MAAM,CAACkB,MAAP,IAAiBI,IAAI,CAACC,GAAL,KAAavB,MAAM,CAACA,MAAM,CAACkB,MAAP,GAAgB,CAAjB,CAAnB,GAAyC,GAA1D,GAAgE,EAAhE,GAAqE,CAAtE,IAA2Ef,UAAU,CAACI,OAAX,CAAmBc,SAA/F,IAA4G,GAA5I,CAbW,CAeX;;AACApB,IAAAA,IAAI,CAACM,OAAL,CAAaiB,gBAAb,CAA8BlC,QAA9B;AACAW,IAAAA,IAAI,CAACM,OAAL,CAAakB,iBAAb,CAA+BjC,SAA/B;AACAO,IAAAA,GAAG,CAAC2B,MAAJ,CAAWC,IAAX,CAAgBrC,QAAhB;AACAS,IAAAA,GAAG,CAACP,SAAJ,CAAcmC,IAAd,CAAmBnC,SAAS,CAACoC,MAAV,EAAnB,EAnBW,CAqBX;;AACAxC,IAAAA,aAAa,CAACD,KAAd,GAAsBQ,QAAQ,CAACkC,IAAT,GAAgB/C,UAAhB,GAA6BE,OAAnD;AACAqB,IAAAA,KAAK,CAACE,OAAN,CAAcuB,OAAd,GAAwB,CAACnC,QAAQ,CAACkC,IAAlC;AACAvB,IAAAA,MAAM,CAACC,OAAP,CAAeuB,OAAf,GAAyB,CAAC,CAACnC,QAAQ,CAACkC,IAApC;AACH,GAzBO,CAAR;AA2BA,sBACI;AAAO,IAAA,GAAG,EAAE5B,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAEI,KAAZ;AAAmB,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,GAAR,CAA7B;AAA2C,IAAA,IAAI,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,WAAW,EAAE,IAAnB;AAAyB,IAAA,QAAQ,EAAEjB,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAM,IAAA,WAAW,EAAE,IAAnB;AAAyB,IAAA,QAAQ,EAAEA,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ,eASI;AAAO,IAAA,GAAG,EAAEkB,MAAZ;AAAoB,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,GAAR,CAA9B;AAA4C,IAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAAhB;AAA4B,IAAA,WAAW,EAAE,IAAzC;AAA+C,IAAA,QAAQ,EAAElB,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAM,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,EAAS,CAAT,CAAhB;AAA6B,IAAA,WAAW,EAAE,IAA1C;AAAgD,IAAA,QAAQ,EAAEA,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,eAOI;AAAM,IAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAhB;AAA4B,IAAA,WAAW,EAAE,IAAzC;AAA+C,IAAA,QAAQ,EAAEA,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,eAUI;AAAM,IAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,CAAT,CAAhB;AAA6B,IAAA,WAAW,EAAE,IAA1C;AAAgD,IAAA,QAAQ,EAAEA,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,CATJ,eAuBI;AAAY,IAAA,GAAG,EAAEe,UAAjB;AAA6B,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,EAAR,CAAvC;AAAoD,IAAA,QAAQ,EAAE,GAA9D;AAAmE,IAAA,SAAS,EAAE,CAA9E;AAAiF,IAAA,KAAK,EAAC,YAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,eAwBI;AAAO,IAAA,GAAG,EAAED,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,MAAM,CAAC+B,GAAP,CAAW,UAACC,CAAD,EAAIf,CAAJ;AAAA,wBACR;AAAO,MAAA,GAAG,EAAEA,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,CAAC,CAAC,GAAF,EAAO,CAAP,EAAU,CAAC,GAAX,CAAhB;AAAiC,MAAA,QAAQ,EAAErC,QAA3C;AAAqD,MAAA,QAAQ,EAAEK,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAM,MAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAC,GAAV,CAAhB;AAAgC,MAAA,QAAQ,EAAEL,QAA1C;AAAoD,MAAA,QAAQ,EAAEK,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADQ;AAAA,GAAX,CADL,CAxBJ,eAgCI;AAAO,IAAA,QAAQ,EAAE,CAACwB,IAAI,CAACG,EAAL,GAAU,CAAX,EAAcH,IAAI,CAACG,EAAnB,EAAuB,CAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAgB,IAAA,MAAM,EAAC;AAAvB,KAAsClB,IAAI,CAACuC,GAAL,CAAS,CAAT,EAAYrD,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAM,IAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAgB,IAAA,MAAM,EAAC;AAAvB,KAAsCc,IAAI,CAACuC,GAAL,CAAS,CAAT,EAAYrD,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,eASI;AAAM,IAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAgB,IAAA,MAAM,EAAC;AAAvB,KAAsCc,IAAI,CAACuC,GAAL,CAAS,CAAT,EAAYrD,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,eAaI;AAAM,IAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAgB,IAAA,MAAM,EAAC;AAAvB,KAAsCc,IAAI,CAACuC,GAAL,CAAS,CAAT,EAAYrD,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,KAAK,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAbJ,eAiBI;AAAM,IAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAgB,IAAA,MAAM,EAAC;AAAvB,KAAsCc,IAAI,CAACuC,GAAL,CAAS,CAAT,EAAYrD,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAjBJ,eAqBI;AAAM,IAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAgB,IAAA,MAAM,EAAC;AAAvB,KAAsCc,IAAI,CAACuC,GAAL,CAAS,EAAT,EAAarD,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,KAAK,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CArBJ,CAhCJ,CADJ,eA4DI;AAAM,IAAA,GAAG,EAAEwB,OAAX;AAAoB,IAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAA3B;AAAuC,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAA4B,IAAA,MAAM,EAAC,UAAnC;AAA8C,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,KAAK,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA5DJ,CADJ;AAmEH","sourcesContent":["import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 40)\nconst lightgreen = new THREE.Color('lightgreen')\nconst hotpink = new THREE.Color('hotpink')\nconst laserMaterial = new THREE.MeshBasicMaterial({ color: lightgreen })\nconst crossMaterial = new THREE.MeshBasicMaterial({ color: hotpink, fog: false })\nconst position = new THREE.Vector3()\nconst direction = new THREE.Vector3()\n\nexport default function Ship() {\n    const gltf = useLoader(GLTFLoader, '/ship.gltf')\n    const mutation = useStore(state => state.mutation)\n    const { clock, mouse, ray } = mutation\n    const lasers = useStore(state => state.lasers)\n    const main = useRef()\n    const laserGroup = useRef()\n    const laserLight = useRef()\n    const exhaust = useRef()\n    const cross = useRef()\n    const target = useRef()\n\n    useFrame(() => {\n        main.current.position.z = Math.sin(clock.getElapsedTime() * 40) * Math.PI * 0.1\n        main.current.rotation.z += (mouse.x / 500 - main.current.rotation.z) * 0.1\n        main.current.rotation.x += (-mouse.y / 1200 - main.current.rotation.x) * 0.1\n        main.current.rotation.y += (-mouse.x / 1200 - main.current.rotation.y) * 0.1\n        main.current.position.x += (mouse.x / 10 - main.current.position.x) * 0.1\n        main.current.position.y += (25 + -mouse.y / 10 - main.current.position.y) * 0.1\n        exhaust.current.scale.x = 1 + Math.sin(clock.getElapsedTime() * 200)\n        exhaust.current.scale.y = 1 + Math.sin(clock.getElapsedTime() * 200)\n        for (let i = 0; i < lasers.length; i++) {\n            const group = laserGroup.current.children[i]\n            group.position.z -= 20\n        }\n        laserLight.current.intensity += ((lasers.length && Date.now() - lasers[lasers.length - 1] < 100 ? 20 : 0) - laserLight.current.intensity) * 0.3\n\n        // Get ships orientation and save it to the stores ray\n        main.current.getWorldPosition(position)\n        main.current.getWorldDirection(direction)\n        ray.origin.copy(position)\n        ray.direction.copy(direction.negate())\n\n        // ...\n        crossMaterial.color = mutation.hits ? lightgreen : hotpink\n        cross.current.visible = !mutation.hits\n        target.current.visible = !!mutation.hits\n    })\n\n    return (\n        <group ref={main}>\n            <group scale={[3.5, 3.5, 3.5]}>\n                <group ref={cross} position={[0, 0, -300]} name=\"cross\">\n                    <mesh renderOrder={1000} material={crossMaterial}>\n                        <boxBufferGeometry attach=\"geometry\" args={[20, 2, 2]} />\n                    </mesh>\n                    <mesh renderOrder={1000} material={crossMaterial}>\n                        <boxBufferGeometry attach=\"geometry\" args={[2, 20, 2]} />\n                    </mesh>\n                </group>\n                <group ref={target} position={[0, 0, -300]} name=\"target\">\n                    <mesh position={[0, 20, 0]} renderOrder={1000} material={crossMaterial}>\n                        <boxBufferGeometry attach=\"geometry\" args={[40, 2, 2]} />\n                    </mesh>\n                    <mesh position={[0, -20, 0]} renderOrder={1000} material={crossMaterial}>\n                        <boxBufferGeometry attach=\"geometry\" args={[40, 2, 2]} />\n                    </mesh>\n                    <mesh position={[20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n                        <boxBufferGeometry attach=\"geometry\" args={[2, 40, 2]} />\n                    </mesh>\n                    <mesh position={[-20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n                        <boxBufferGeometry attach=\"geometry\" args={[2, 40, 2]} />\n                    </mesh>\n                </group>\n                <pointLight ref={laserLight} position={[0, 0, -20]} distance={100} intensity={0} color=\"lightgreen\" />\n                <group ref={laserGroup}>\n                    {lasers.map((t, i) => (\n                        <group key={i}>\n                            <mesh position={[-2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n                            <mesh position={[2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n                        </group>\n                    ))}\n                </group>\n                <group rotation={[Math.PI / 2, Math.PI, 0]}>\n                    <mesh name=\"Renault_(S,_T1)_0\">\n                        <bufferGeometry attach=\"geometry\" {...gltf.__$[5].geometry} />\n                        <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n                    </mesh>\n                    <mesh name=\"Renault_(S,_T1)_1\">\n                        <bufferGeometry attach=\"geometry\" {...gltf.__$[6].geometry} />\n                        <meshStandardMaterial attach=\"material\" color=\"black\" />\n                    </mesh>\n                    <mesh name=\"Renault_(S,_T1)_2\">\n                        <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n                        <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n                    </mesh>\n                    <mesh name=\"Renault_(S,_T1)_3\">\n                        <bufferGeometry attach=\"geometry\" {...gltf.__$[8].geometry} />\n                        <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n                    </mesh>\n                    <mesh name=\"Renault_(S,_T1)_4\">\n                        <bufferGeometry attach=\"geometry\" {...gltf.__$[9].geometry} />\n                        <meshBasicMaterial attach=\"material\" color=\"white\" />\n                    </mesh>\n                    <mesh name=\"Renault_(S,_T1)_5\">\n                        <bufferGeometry attach=\"geometry\" {...gltf.__$[10].geometry} />\n                        <meshBasicMaterial attach=\"material\" color=\"teal\" />\n                    </mesh>\n                </group>\n            </group>\n            <mesh ref={exhaust} scale={[1, 1, 30]} position={[0, 1, 30]}>\n                <dodecahedronBufferGeometry attach=\"geometry\" args={[1.5, 0]} />\n                <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n            </mesh>\n        </group>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
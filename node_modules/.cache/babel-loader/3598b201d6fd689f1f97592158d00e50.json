{"ast":null,"code":"import _slicedToArray from \"/Users/gsg/Documents/3d/react-demo/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gsg/Documents/3d/react-demo/demo/src/3d/Planets.js\";\nimport * as THREE from 'three';\nimport React, { useRef } from 'react';\nimport { useLoader } from 'react-three-fiber';\nvar earthImg = 'https://uploads.codesandbox.io/uploads/user/b3e56831-8b98-4fee-b941-0e27f39883ab/7fRQ-earth.jpg';\nvar moonImg = 'https://uploads.codesandbox.io/uploads/user/b3e56831-8b98-4fee-b941-0e27f39883ab/GNH7-moon.png';\nexport default function Planets() {\n  var ref = useRef();\n\n  var _useLoader = useLoader(THREE.TextureLoader, [earthImg, moonImg]),\n      _useLoader2 = _slicedToArray(_useLoader, 2),\n      texture = _useLoader2[0],\n      moon = _useLoader2[1];\n\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    scale: [100, 100, 100],\n    position: [-500, -500, 1000],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [5, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    map: texture,\n    roughness: 1,\n    fog: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [5, -5, -5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.75, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    roughness: 1,\n    map: moon,\n    fog: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [-5, -5, -5],\n    distance: 1000,\n    intensity: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [-30, -10, -60],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [4, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"#FFFF99\",\n    fog: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    distance: 6100,\n    intensity: 50,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/gsg/Documents/3d/react-demo/demo/src/3d/Planets.js"],"names":["THREE","React","useRef","useLoader","earthImg","moonImg","Planets","ref","TextureLoader","texture","moon"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,IAAMC,QAAQ,GAAG,iGAAjB;AACA,IAAMC,OAAO,GAAG,gGAAhB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,MAAMC,GAAG,GAAGL,MAAM,EAAlB;;AAD8B,mBAENC,SAAS,CAACH,KAAK,CAACQ,aAAP,EAAsB,CAACJ,QAAD,EAAWC,OAAX,CAAtB,CAFH;AAAA;AAAA,MAEvBI,OAFuB;AAAA,MAEdC,IAFc;;AAG9B,sBACI;AAAO,IAAA,GAAG,EAAEH,GAAZ;AAAiB,IAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAxB;AAAyC,IAAA,QAAQ,EAAE,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,EAAa,IAAb,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,GAAG,EAAEE,OAA7C;AAAsD,IAAA,SAAS,EAAE,CAAjE;AAAoE,IAAA,GAAG,EAAE,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAM,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAC,CAAT,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,IAAI,EAAE,CAAC,IAAD,EAAO,EAAP,EAAW,EAAX,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,SAAS,EAAE,CAAnD;AAAsD,IAAA,GAAG,EAAEC,IAA3D;AAAiE,IAAA,GAAG,EAAE,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,eASI;AAAY,IAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,CAAtB;AAAoC,IAAA,QAAQ,EAAE,IAA9C;AAAoD,IAAA,SAAS,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI;AAAM,IAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAM,CAAC,EAAP,EAAW,CAAC,EAAZ,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,KAAK,EAAC,SAA3C;AAAqD,IAAA,GAAG,EAAE,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAY,IAAA,QAAQ,EAAE,IAAtB;AAA4B,IAAA,SAAS,EAAE,EAAvC;AAA2C,IAAA,KAAK,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAVJ,CADJ;AAkBH","sourcesContent":["import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader } from 'react-three-fiber'\nconst earthImg = 'https://uploads.codesandbox.io/uploads/user/b3e56831-8b98-4fee-b941-0e27f39883ab/7fRQ-earth.jpg';\nconst moonImg = 'https://uploads.codesandbox.io/uploads/user/b3e56831-8b98-4fee-b941-0e27f39883ab/GNH7-moon.png';\n\nexport default function Planets() {\n    const ref = useRef()\n    const [texture, moon] = useLoader(THREE.TextureLoader, [earthImg, moonImg])\n    return (\n        <group ref={ref} scale={[100, 100, 100]} position={[-500, -500, 1000]}>\n            <mesh>\n                <sphereBufferGeometry attach=\"geometry\" args={[5, 32, 32]} />\n                <meshStandardMaterial attach=\"material\" map={texture} roughness={1} fog={false} />\n            </mesh>\n            <mesh position={[5, -5, -5]}>\n                <sphereBufferGeometry attach=\"geometry\" args={[0.75, 32, 32]} />\n                <meshStandardMaterial attach=\"material\" roughness={1} map={moon} fog={false} />\n            </mesh>\n            <pointLight position={[-5, -5, -5]} distance={1000} intensity={6} />\n            <mesh position={[-30, -10, -60]}>\n                <sphereBufferGeometry attach=\"geometry\" args={[4, 32, 32]} />\n                <meshBasicMaterial attach=\"material\" color=\"#FFFF99\" fog={false} />\n                <pointLight distance={6100} intensity={50} color=\"white\" />\n            </mesh>\n        </group>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/gsg/Documents/3d/react-demo/demo/src/3d/Rocks.js\",\n    _this2 = this;\n\nimport React, { useRef } from 'react';\nimport { useFrame, useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport useStore from '../store';\nexport default function Rocks() {\n  var _this = this;\n\n  var gltf = useLoader(GLTFLoader, '/rock.gltf');\n  var rocks = useStore(function (state) {\n    return state.rocks;\n  });\n  return rocks.map(function (data) {\n    return /*#__PURE__*/React.createElement(Rock, {\n      gltf: gltf,\n      key: data.guid,\n      data: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 30\n      }\n    });\n  });\n}\nvar Rock = React.memo(function (_ref) {\n  var gltf = _ref.gltf,\n      data = _ref.data;\n  var ref = useRef();\n\n  var _useStore = useStore(function (state) {\n    return state.mutation;\n  }),\n      clock = _useStore.clock;\n\n  useFrame(function () {\n    var r = Math.cos(clock.getElapsedTime() / 2 * data.speed) * Math.PI;\n    ref.current.rotation.set(r, r, r);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    position: data.offset,\n    scale: [data.scale, data.scale, data.scale],\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"object3D\", {\n    position: [-0.016298329457640648, -0.012838120572268963, 0.24073271453380585],\n    rotation: [3.0093872578726644, 0.27444228385461117, -0.22745113653772078],\n    scale: [20, 20, 20],\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", Object.assign({\n    attach: \"geometry\"\n  }, gltf.__$[7].geometry, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", Object.assign({\n    attach: \"material\"\n  }, gltf.__$[7].material, {\n    color: \"white\",\n    roughness: 1,\n    metalness: 1,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })))));\n});","map":{"version":3,"sources":["/Users/gsg/Documents/3d/react-demo/demo/src/3d/Rocks.js"],"names":["React","useRef","useFrame","useLoader","GLTFLoader","useStore","Rocks","gltf","rocks","state","map","data","guid","Rock","memo","ref","mutation","clock","r","Math","cos","getElapsedTime","speed","PI","current","rotation","set","offset","scale","__$","geometry","material"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,MAAMC,IAAI,GAAGJ,SAAS,CAACC,UAAD,EAAa,YAAb,CAAtB;AACA,MAAMI,KAAK,GAAGH,QAAQ,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACD,KAAV;AAAA,GAAN,CAAtB;AACA,SAAOA,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,wBAAI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEJ,IAAZ;AAAkB,MAAA,GAAG,EAAEI,IAAI,CAACC,IAA5B;AAAkC,MAAA,IAAI,EAAED,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAd,CAAP;AACH;AAED,IAAME,IAAI,GAAGb,KAAK,CAACc,IAAN,CAAW,gBAAoB;AAAA,MAAjBP,IAAiB,QAAjBA,IAAiB;AAAA,MAAXI,IAAW,QAAXA,IAAW;AACxC,MAAMI,GAAG,GAAGd,MAAM,EAAlB;;AADwC,kBAEtBI,QAAQ,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACO,QAAV;AAAA,GAAN,CAFc;AAAA,MAEhCC,KAFgC,aAEhCA,KAFgC;;AAGxCf,EAAAA,QAAQ,CAAC,YAAM;AACX,QAAMgB,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAUH,KAAK,CAACI,cAAN,KAAyB,CAA1B,GAA+BV,IAAI,CAACW,KAA7C,IAAsDH,IAAI,CAACI,EAArE;AACAR,IAAAA,GAAG,CAACS,OAAJ,CAAYC,QAAZ,CAAqBC,GAArB,CAAyBR,CAAzB,EAA4BA,CAA5B,EAA+BA,CAA/B;AACH,GAHO,CAAR;AAIA,sBACI;AAAO,IAAA,GAAG,EAAEH,GAAZ;AAAiB,IAAA,QAAQ,EAAEJ,IAAI,CAACgB,MAAhC;AAAwC,IAAA,KAAK,EAAE,CAAChB,IAAI,CAACiB,KAAN,EAAajB,IAAI,CAACiB,KAAlB,EAAyBjB,IAAI,CAACiB,KAA9B,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAE,CAAC,CAAC,oBAAF,EAAwB,CAAC,oBAAzB,EAA+C,mBAA/C,CADd;AAEI,IAAA,QAAQ,EAAE,CAAC,kBAAD,EAAqB,mBAArB,EAA0C,CAAC,mBAA3C,CAFd;AAGI,IAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAgB,IAAA,MAAM,EAAC;AAAvB,KAAsCrB,IAAI,CAACsB,GAAL,CAAS,CAAT,EAAYC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAsB,IAAA,MAAM,EAAC;AAA7B,KAA4CvB,IAAI,CAACsB,GAAL,CAAS,CAAT,EAAYE,QAAxD;AAAkE,IAAA,KAAK,EAAC,OAAxE;AAAgF,IAAA,SAAS,EAAE,CAA3F;AAA8F,IAAA,SAAS,EAAE,CAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CAJJ,CADJ,CADJ;AAaH,CApBY,CAAb","sourcesContent":["import React, { useRef } from 'react'\nimport { useFrame, useLoader } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nexport default function Rocks() {\n    const gltf = useLoader(GLTFLoader, '/rock.gltf')\n    const rocks = useStore(state => state.rocks)\n    return rocks.map(data => <Rock gltf={gltf} key={data.guid} data={data} />)\n}\n\nconst Rock = React.memo(({ gltf, data }) => {\n    const ref = useRef()\n    const { clock } = useStore(state => state.mutation)\n    useFrame(() => {\n        const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\n        ref.current.rotation.set(r, r, r)\n    })\n    return (\n        <group ref={ref} position={data.offset} scale={[data.scale, data.scale, data.scale]}>\n            <object3D\n                position={[-0.016298329457640648, -0.012838120572268963, 0.24073271453380585]}\n                rotation={[3.0093872578726644, 0.27444228385461117, -0.22745113653772078]}\n                scale={[20, 20, 20]}>\n                <mesh>\n                    <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n                    <meshStandardMaterial attach=\"material\" {...gltf.__$[7].material} color=\"white\" roughness={1} metalness={1} />\n                </mesh>\n            </object3D>\n        </group>\n    )\n})\n"]},"metadata":{},"sourceType":"module"}